.\" SPDX-FileCopyrightText: 2024 - 2025 Eli Array Minkoff
.\"
.\" SPDX-License-Identifier: GPL-3.0-only
.\"
.\" The man page for eambfc, handwritten as part of the final preparation
.\" for the release of eambfc 2.0.0, and has been updated since.

.TH EAMBFC 1 2025-03-29 EAMBFC

.SH NAME
eambfc \- a brainfuck compiler that outputs 64-bit Linux ELF executables

.SH SYNOPSIS
.B eambfc [-O] [-q] [-j] [-k] [-c]
.I src0.bf [src1.bf ...]

.B eambfc [-O] [-q] [-j] [-k] [-c] -e b
.I src0.b [src1.b ...]

.SH DESCRIPTION

.PP
.B eambfc
is a brainfuck compiler that outputs 64-bit Linux ELF executables.
By default, it's a rather straightforward, direct single-pass compiler,
which translates each instruction directly to machine code, but it
can optionally be used as an optimizing compiler as well.
.PP
It can compile any number of brainfuck source files in sequence, and will
always write the output to a file with the same name as the source file,
but with the extension (which is
.RI \*(lq .bf \*(rq
by default) removed.

.SH OPTIONS
.PP
.B Note:
long option variants require compilation with longopts enabled, which is
not the default because it requires a non-standard GNU extension to libc.

.TP
.BR -h ,\  --help
show help text

.TP
.BR -V ,\  --version
show version, build configuration, and copyright information

.TP
.BR -j ,\  --json
Don't write further error messages to the standard error stream.
Instead, write them to the standard output stream, formatted as JSON.
Any byte within filenames that is not valid UTF-8 will be replaced by the
Unicode

.TP
.BR -q ,\  --quiet
Don't write further error messaages to the standard error stream. Does
not prevent JSON-formatted messages from being printed if
.B -j
was passed as well.

.TP
.BI -O ,\  --optimize
enable optimizations - see
.B OPTIMIZATIONS
section below for more details.

.TP
.BI -k ,\  --keep
keep output executables even if they are malformed due to failed
compilation, for debugging or analysis.

.TP
.BI -c ,\  --continue
If passed multiple source files, and one fails to compile, don't abort
immediately, and still try to compile the remaining files.

.TP
.BI -A ,\  --list-targets
List available architectures that this build of
.B eambfc
includes. Standard builds include all architectures that have been fully
implemented and passed the full test suite, which as of version 4.0.0, are
.\" __BACKENDS__ add backend to this list
.BR arm64 ,
.BR riscv64 ,
.BR s390x ,\ and
.BR x86_64 .

.TP
.BI -t\ count ,\  --tape-size=count
Allocate
.I count
4-KiB (i.e. 4096-byte) blocks of memory for the tape. If passed more than
once,
.B eambfc
will abort without compiling anything.

.TP
.BI -e\ ext ,\  --source-extension=ext
Use
.I ext
instead of
.I .bf
as the file extension for brainfuck source files. If passed more than
once,
.B eambfc
will abort without compiling anything.

.TP
.BI -s\ ext ,\  --output-suffix=ext
Use
.I ext
as the extension for compiled output files. If not passed, they'll have no
extension. If passed more than once,
.B eambfc
will abort without compiling anything.

.TP
.BI -a\ arch ,\  --target-arch=arch
Compile for
.I arch
instead of the default. If passed more than once,
.B eambfc
will abort without compiling anything.

.SH OPTIMIZATIONS

.PP
There are a few stages to optimization that are run before compilation if
.B -O
was passed.

.PP
.B Stage 1
.PP
Any characters that are not brainfuck instructions are removed.

.B Stage 2
.PP
This stage repeatedly alternates between two steps. First, any sequences
of consecutive instructions that would cancel out are removed - that's any
of
.RB \*(lq <> \*(rq,
.RB \*(lq >< \*(rq,
.RB \*(lq +- \*(rq,
.RB \*(lq -+ \*(rq,
or sequences of 256 consecutive
.RB \*(lq + \*(rq
or
.RB \*(lq - \*(rq
instructions.

Next, any conditional loops that are trivially able to be determined never
to run, either because they are at the very beginning of the code, or
right after another loop, are eliminated.

These two steps repeat until neither of them find any code to eliminate.
It is unlikely to take more than one or two passes, unless compiling a
program designed to have a lot of dead or useless code.

.B Stage 3
.PP
.RB \*(lq [-] \*(rq
and
.RB \*(lq [+] \*(rq
instruction sequences are replaced with an internal \*(lqset zero\*(rq
instruction.

.B Compilation Pass
.PP
In addition to handling the internal \*(lqset zero\*(rq instruction,
consecutive
.RB \*(lq < \*(rq,
.RB \*(lq > \*(rq,
.RB \*(lq + \*(rq,
and
.RB \*(lq - \*(rq
instructions are combined into single add or sub instructions, either for
the tape pointer in the case of
.RB \*(lq < \*(rq
or
.RB \*(lq > \*(rq,
or the current cell in the case of
.RB \*(lq - \*(rq
or
.RB \*(lq + \*(rq.

.SH EXAMPLES

Compile a
.I hello.bf
source file with a 4-KiB tape size and with optimizations enabled:

.B eambfc -Ot1 hello.bf

.SH COPYRIGHT
Copyright 2024 - 2025 Eli Array Minkoff
.IR <eli@planetminkoff.com>
.\" vi: cc=75
