# SPDX-FileCopyrightText: 2025 Eli Array Minkoff
#
# SPDX-License-Identifier: 0BSD

---

CompileFlags:
  Add:
    # strict warnings, to help ensure C99 and POSIX 2008 compliance
    - "-Wall"
    - "-Wextra"
    - "-Wpedantic"
    - "-xc"
    - "-std=c99"
    - "-D_POSIX_C_SOURCE=200908L"
  Compiler: clang

---

If:
  PathExclude: 'main\.c'
CompileFlags:
  Add:
    # flags needed for test suite
    - "-I/usr/lib/llvm-19/include"
    - "-I/usr/include/json-c"
    - "-DBFC_TEST"

---

If:
  PathExclude: compat/elf\.h
CompileFlags:
  Add:
    # Warn on reserved identifiers outside of elf.h
    - "-Wreserved-identifier"
    - "-Wreserved-macro-identifier"

---

# headers are not complete translation units on their own, so the
# empty-translation-unit check is prone to false positives if run on headers
If:
  PathMatch: .*\.h
CompileFlags:
  Add:
    - "-Wno-empty-translation-unit"

---

# post_config.h is an odd one that needs special treatment if edited directly
If:
  PathMatch: post_config.h
CompileFlags:
  Add:
    # throws an error if this macro isn't defined, as it's only meant to be
    # included by config.h for post-config validation and processing
    - "-DBFC_PREPROC_POST_CONFIG"
    # enable all architectures and set default architecture - this is needed to
    # avoid some of the post-config validation `#error` macros triggering due to
    # a missing or disabled default architecture selection
    # __BACKENDS__ add backend to this list
    - "-DBFC_TARGET_ARM64=1"
    - "-DBFC_TARGET_RISCV64=1"
    - "-DBFC_TARGET_S390X=1"
    - "-DBFC_TARGET_X86_64=1"
    - "-DBFC_INFER_DEFAULT"

# vi: ft=yaml ts=2 sts=2 sw=2 et
